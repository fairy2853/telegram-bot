from telegram import Update, InputFile
from telegram.ext import ContextTypes
from io import BytesIO
from fpdf import FPDF


async def handle_file_generation(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    if query.data == "price_yes":
        await query.edit_message_text("–ß—É–¥–æ–≤–æ! –ì–æ—Ç—É—é —Å—Ç—Ä–∞—Ö–æ–≤–∏–π –ø–æ–ª—ñ—Å...")

        result_text = context.user_data.get("last_result", "–î–∞–Ω—ñ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")

        # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è PDF —É –ø–∞–º º—è—Ç—ñ
        pdf = FPDF()
        pdf.add_page()

        pdf.add_font("DejaVu", "", "fonts/DejaVuSans.ttf", uni=True)
        pdf.set_font("DejaVu", size=12)

        pdf.cell(200, 10, txt="–°—Ç—Ä–∞—Ö–æ–≤–∏–π –ø–æ–ª—ñ—Å", ln=1, align="C")
        pdf.ln(10)

        for line in result_text.split("\n"):
            pdf.multi_cell(0, 10, line)

        # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ BytesIO
        pdf_bytes = pdf.output(dest="S").encode("latin1")
        pdf_buffer = BytesIO(pdf_bytes)
        pdf_buffer.name = "insurance_policy.pdf"

        await query.message.reply_document(
            document=InputFile(pdf_buffer, filename="insurance_policy.pdf"),
            caption="–û—Å—å –≤–∞—à —Å—Ç—Ä–∞—Ö–æ–≤–∏–π –ø–æ–ª—ñ—Å üßæ",
        )
    elif query.data == "price_no":
        await query.edit_message_text(
            "–í–∏–±–∞—á, –∞–ª–µ 100 USD ‚Äî —Ü–µ —î–¥–∏–Ω–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ü—ñ–Ω–∞ –Ω–∞ —Å—Ç—Ä–∞—Ö—É–≤–∞–Ω–Ω—è.\n"
            "–Ø–∫—â–æ –ø–µ—Ä–µ–¥—É–º–∞—î—à ‚Äî –ø—Ä–æ—Å—Ç–æ –Ω–∞—Ç–∏—Å–Ω–∏ /start –∞–±–æ –∑–≤–µ—Ä–Ω–∏—Å—å –ø–æ–≤—Ç–æ—Ä–Ω–æ."
        )
